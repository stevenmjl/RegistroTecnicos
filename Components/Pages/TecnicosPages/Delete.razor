@page "/Tecnico/Delete/tecnicoid={idTecnico:int}"
@rendermode InteractiveServer
@inject TecnicosService tecnicosService
@inject NavigationManager navigation

<PageTitle>Detalles</PageTitle>

<Toasts class="p-3" Messages="Mensajes" Placement="ToastsPlacement.TopRight"
        AutoHide="true" Delay="5000" />

<div class="container">
    <div class="card shadow-lg">
        @*Titulo de página*@
        <div class="card-header text-white text-center">
            <div class="bg-danger rounded">
                <h1>Eliminar T&eacute;nico</h1>
            </div>
        </div>

        @*Vista general*@
        <div class="card-body" style="display: flex; justify-content: space-between;">
            <Card Color="CardColor.Danger" Class="mb-2" Style="width:24rem;">
                <CardHeader>
                    <CardTitle>
                        ID: @Tecnico.TecnicoId
                    </CardTitle>
                </CardHeader>
                <CardBody>
                    <CardText>@Tecnico.Nombres</CardText>
                    <CardText>Sueldo hora: @Tecnico.SueldoHora.ToString("N2")</CardText>
                </CardBody>
            </Card>

            <div class=" col-4">
                <b>
                    Debe tener en cuenta que eliminar ......
                    ¡¡¡Es una acci&oacute;n que no se puede revertir!!!
                </b>
            </div>
        </div>

        @*Botones de control*@
        <div class="card-footer d-flex justify-content-end">
            <button class="btn btn-danger bi bi-trash" type="button"
                    @onclick="Eliminar" style="margin-right: 10px;">
                Eliminar
            </button>
            <button class="btn btn-secondary" type="button"
                    @onclick="Volver">
                <i class="bi bi-arrow-left"></i> Volver
            </button>
        </div>
    </div>
</div>

@code {
    public Tecnicos? Tecnico { get; set; } = new Tecnicos();
    [Parameter]
    public int idTecnico { get; set; }
    List<ToastMessage> Mensajes = new List<ToastMessage>();

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicosService.Buscar(idTecnico);
    }

    public async Task Eliminar()
    {
        await tecnicosService.Eliminar(idTecnico);
        MostrarMensaje(ToastType.Danger, "Técnico eliminado correctamente.");
    }

    private void MostrarMensaje(ToastType toastType, string message)
    {
        Mensajes.Add(CrearMensaje(toastType, message));
    }

    private ToastMessage CrearMensaje(ToastType toastType, string message)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = message,
        };

    public void Volver() => navigation.NavigateTo("/Tecnico/Index");
}