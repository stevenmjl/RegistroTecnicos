@page "/Tecnico/Create"
@rendermode InteractiveServer
@inject TecnicosService tecnicosService
@inject NavigationManager navigation

<PageTitle>Crear t&eacute;cnico</PageTitle>

<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <Toasts class="p-3" Messages="Mensajes" Placement="ToastsPlacement.TopRight"
            AutoHide="true" Delay="5000" />
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            @*Titulo de página*@
            <div class="card-header text-white text-center">
                <div class="bg-success rounded">
                    <h1>Registro de T&eacute;cnico</h1>
                </div>
            </div>

            @* Vista general*@
            <div class="card-body">
                @* Id *@
                <div class="mb-3 col-2">
                    <label class="form-label" for="Id">Id</label>
                    <InputNumber id="Id" class="form-control text-left" readonly
                                 @bind-Value="UltimoTecnico"></InputNumber>
                </div>

                @* Nombres *@
                <div class="mb-3 col-4">
                    <label class="form-label" for="Nombres">Nombres</label>
                    <InputText id="Nombres" class="form-control"
                               @bind-Value="Tecnico.Nombres" placeholder="Ej: Angela Santana López">
                    </InputText>
                    <ValidationMessage For="@(() => Tecnico.Nombres)"></ValidationMessage>
                </div>

                @* Sueldo Hora *@
                <div class="mb-3 col-2">
                    <label class="form-label" for="SueldoHora">Sueldo hora</label>
                    <InputNumber id="SueldoHora" class="form-control"
                                 @bind-Value="Tecnico.SueldoHora"></InputNumber>
                    <ValidationMessage For="@(() => Tecnico.SueldoHora)"></ValidationMessage>
                </div>
            </div>

            @*Botones de control*@
            <div class="card-footer d-flex justify-content-center">
                <button class="btn btn-success" type="submit"
                        style="margin-right: 10px;">
                        <i class="bi bi-floppy"></i> Crear
                </button>
                <button class="btn btn-secondary" type="button" 
                         @onclick="Volver">
                         <i class="bi bi-arrow-left"></i> Volver
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Tecnicos? Tecnico { get; set; } = new Tecnicos();
    private int UltimoTecnico;
    List<ToastMessage> Mensajes = new List<ToastMessage>();

    protected override async Task OnInitializedAsync()
    {
        UltimoTecnico = 1 + await tecnicosService.UltimoId();
    }

    public async Task Guardar()
    {
        if(!await Validar())
        {
            var nuevo = await tecnicosService.Guardar(Tecnico);
            if(nuevo)
            {
                MostrarMensaje(ToastType.Success,
                    $"Técnico {Tecnico.Nombres} ha sido creado correctamente.");
                Tecnico = new Tecnicos();
                UltimoTecnico = 1 + await tecnicosService.UltimoId();
            }
            else
            {
                MostrarMensaje(ToastType.Danger, "Técnico no se ha podido crear correctamente.");
            }
        }
        else
        {
            MostrarMensaje(ToastType.Warning, "Ya existe un técnico con este nombre.");
        }
    }

    public async Task<bool> Validar()
    {
        var existe = await tecnicosService.Existe(Tecnico.TecnicoId, Tecnico.Nombres);
        return existe;
    }

    private void MostrarMensaje(ToastType toastType, string message)
    {
        Mensajes.Add(CrearMensaje(toastType, message));
    }

    private ToastMessage CrearMensaje(ToastType toastType, string message)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = message,
        };

    public void Volver() => navigation.NavigateTo("/Tecnico/Index");
}