@page "/Tecnico/Index"
@rendermode InteractiveServer
@inject TecnicosService tecnicosService
@inject NavigationManager navigation

<PageTitle>T&eacute;cnicos</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        @*Titulo*@
        <div class="card-header text-white text-center">
            <div class="bg-primary rounded">
                <h1>Consulta de T&eacute;cnicos</h1>
            </div>
        </div>

        @*Vista general*@
        <div class="card-body">
            <div class="row mb-2 align-items-end">
                @*Zona de Filtro*@
                <div class="row align-items-center">
                    <div class="col-md-2">
                        <label for="Filtro" class="form-label">Filtrar por:</label>
                    </div>
                    <div class="col-md-10">
                        <div class="d-flex justify-content-end">
                            <label for="TotalTecnicos" class="form-label">
                                Total de técnicos: @ListaTecnicos.Count()
                            </label>
                        </div>
                    </div>
                </div>

                @*Selección de filtro*@
                <div class="col-md-2">
                    <select @bind="filtro" class="form-select">
                        <option value="id">ID</option>
                        <option value="nombres" selected>Nombres</option>
                    </select>
                </div>

                @*Dato a buscar*@
                <div class="col-md-5">
                    <div class="input-group">
                        <input @bind="valorFiltro" class="form-control" placeholder="Escribir dato" />
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button">
                            <span class="bi bi-search"></span> Buscar
                        </button>
                    </div>
                </div>

                @*Restablecer tabla*@
                <div class="col-md-3">
                    <button class="btn btn-outline-secondary bi bi-arrow-clockwise" type="button"
                            @onclick="OnInitializedAsync">
                        Reiniciar todo
                    </button>
                </div>

                @*Botón crear*@
                <div class="col-md-2 text-end">
                    <button class="btn btn-success bi bi-person-fill-add" type="button"
                            @onclick="Crear">
                        Crear
                    </button>
                </div>
            </div>

            @*Tabla con su lista*@
            <table class="table table-bordered">
                <thead class="bg-info text-center text-white">
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Sueldo hora</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tecnico in ListaTecnicos)
                    {
                        <tr class="text-center">
                            <td>@tecnico.TecnicoId</td>
                            <td>@tecnico.Nombres</td>
                            <td>@tecnico.SueldoHora.ToString("N2")</td>
                            <td>
                                <button type="button" class="btn btn-outline-warning bi bi-pencil-square"
                                        @onclick="()=>Editar(tecnico.TecnicoId)"></button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-danger bi bi-trash"
                                        @onclick="()=>Eliminar(tecnico.TecnicoId)"></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public List<Tecnicos> ListaTecnicos = new List<Tecnicos>();
    private string filtro = "";
    private string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        ListaTecnicos = await tecnicosService.Listar(e => true);
        filtro = "nombres";
        valorFiltro = "";
    }

    private async Task Buscar()
    {
        if (valorFiltro.Trim() != "")
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int tecnicoId))
            {
                ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId == tecnicoId);
            }
            else if (filtro == "nombres")
            {
                ListaTecnicos = await tecnicosService.Listar(t => t.Nombres
                    .ToLower()
                    .Contains(valorFiltro
                    .ToLower()));
            }
        }
        else
        {
            ListaTecnicos = await tecnicosService.Listar(p => true);
        }
    }

    public void Crear()
    {
        navigation.NavigateTo("/Tecnico/Create");
    }

    public void Editar(int id)
    {
        navigation.NavigateTo($"/Tecnico/Edit/tecnicoid={id}");
    }

    public void Eliminar(int id)
    {
        navigation.NavigateTo($"/Tecnico/Delete/tecnicoid={id}");
    }
}